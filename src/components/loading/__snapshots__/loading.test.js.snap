// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Loading /> should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Loading />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <svg
        class="spinner"
        height="65px"
        viewBox="0 0 66 66"
        width="65px"
        xmlns="http://www.w3.org/2000/svg"
      >
        <circle
          class="path"
          cx="33"
          cy="33"
          fill="none"
          r="30"
          stroke-linecap="round"
          stroke-width="6"
        />
      </svg>,
      "className": "spinner-wrapper",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <circle
          class="path"
          cx="33"
          cy="33"
          fill="none"
          r="30"
          stroke-linecap="round"
          stroke-width="6"
        />,
        "class": "spinner",
        "height": "65px",
        "viewBox": "0 0 66 66",
        "width": "65px",
        "xmlns": "http://www.w3.org/2000/svg",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "class": "path",
          "cx": "33",
          "cy": "33",
          "fill": "none",
          "r": "30",
          "stroke-linecap": "round",
          "stroke-width": "6",
        },
        "ref": null,
        "rendered": null,
        "type": "circle",
      },
      "type": "svg",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <svg
          class="spinner"
          height="65px"
          viewBox="0 0 66 66"
          width="65px"
          xmlns="http://www.w3.org/2000/svg"
        >
          <circle
            class="path"
            cx="33"
            cy="33"
            fill="none"
            r="30"
            stroke-linecap="round"
            stroke-width="6"
          />
        </svg>,
        "className": "spinner-wrapper",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <circle
            class="path"
            cx="33"
            cy="33"
            fill="none"
            r="30"
            stroke-linecap="round"
            stroke-width="6"
          />,
          "class": "spinner",
          "height": "65px",
          "viewBox": "0 0 66 66",
          "width": "65px",
          "xmlns": "http://www.w3.org/2000/svg",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "class": "path",
            "cx": "33",
            "cy": "33",
            "fill": "none",
            "r": "30",
            "stroke-linecap": "round",
            "stroke-width": "6",
          },
          "ref": null,
          "rendered": null,
          "type": "circle",
        },
        "type": "svg",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
